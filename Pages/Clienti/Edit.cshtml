@page "{id:int}"
@model Ecommerce.Pages.Clienti.EditModel
@{
    ViewData["Title"] = ViewData["Title"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewData["Mesagge"]</h2>
<h3>@ViewData["Error"]</h3>

<hr />
<div class="row">
    <div class="col-md-4">

        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            //Only when you EDIT
            var ID = Convert.ToInt32(@RouteData.Values["id"]);
            if (ID != 0)
            {
                @Html.HiddenFor(model => model.cliente.IdCliente)
            }

            <div class="form-group">
                @Html.LabelFor(model => model.cliente.Nome)
                <div class="form-label-group">
                    @Html.EditorFor(model => model.cliente.Nome, new { htmlAttributes = new { @class = "form-control", autofocus = true } })
                    @Html.ValidationMessageFor(model => model.cliente.Nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cliente.Cognome)
                <div class="form-label-group">
                    @Html.EditorFor(model => model.cliente.Cognome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cliente.Cognome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cliente.RagioneSociale)
                <div class="form-label-group">
                    @Html.EditorFor(model => model.cliente.RagioneSociale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cliente.RagioneSociale, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cliente.CodiceFiscale)
                <div class="form-label-group">
                    @Html.EditorFor(model => model.cliente.CodiceFiscale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cliente.CodiceFiscale, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cliente.DataNascita)
                <div class="form-label-group">
                    @Html.TextBoxFor(model => model.cliente.DataNascita, "{0:yyyy-MM-dd}", htmlAttributes: new { type = "date", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.cliente.DataNascita, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cliente.LuogoNascita)
                <div class="form-label-group">
                    @Html.EditorFor(model => model.cliente.LuogoNascita, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cliente.LuogoNascita, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cliente.Sesso)
                <div class="form-label-group">
                    @Html.EditorFor(model => model.cliente.Sesso, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cliente.Sesso, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cliente.PersonaFisica)
                <div class="form-label-group">
                    @Html.EditorFor(model => model.cliente.PersonaFisica, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cliente.PersonaFisica, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary btn-block" />
            </div>
        }
    </div>
</div>

<div>
    <a href="@(Url.Page("/Clienti/Ricerca"))"><i class="fas fa-arrow-circle-left"></i>Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

